

# This file was *autogenerated* from the file dvol_dim_chidist_relation.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2049 = Integer(2049); _sage_const_15614p219 = RealNumber('15614.219'); _sage_const_2 = Integer(2); _sage_const_1p = RealNumber('1.'); _sage_const_0p = RealNumber('0.'); _sage_const_50 = Integer(50); _sage_const_1 = Integer(1)
load("pnjbkz_simulator.sage")

from math import log


def draw_dim_chi_relation_fig():
    dim_ = _sage_const_2049 
    dvol = _sage_const_15614p219 
    #for dim_ in range(100,101,10):
    if(True):
        #print("Generate gs-lengths by GSA assumption.")
        delta = compute_delta(_sage_const_2 )
        l = [log(bkzgsa_gso_len(dvol, i, dim_, delta=delta)) / log(_sage_const_2 ) for i in range(dim_)]
        remaining_proba = _sage_const_1p 
        cumulated_proba = _sage_const_0p 
        for beta in range(_sage_const_50 , dim_):
            l = simulate_pnjBKZ(l, beta, _sage_const_1 , _sage_const_1 )#simulate_pnjBKZ(log_GS_lengths, beta, loop, jump)
            proba = chisquared_table[beta].cum_distribution_function(
                        _sage_const_2 **(_sage_const_2  * l[dim_ - beta]))

            cumulated_proba += remaining_proba * proba
            remaining_proba = _sage_const_1p  - cumulated_proba 
            print(dim_, beta,  dvol, l[dim_ - beta], proba, cumulated_proba)


draw_dim_chi_relation_fig()

